package drools.spring.rules;

import com.ftn.sbnz_2020.facts.Symptom;
import com.ftn.sbnz_2020.facts.Disease;
import com.ftn.sbnz_2020.facts.Diagnose;

import java.util.ArrayList;
import java.util.List;

rule "Find matching specific symptoms"
	lock-on-active true
	salience 30
	agenda-group "finding symptoms"
	when
		$d:Disease( $ss:specificSymptoms )
		$resList:List() from accumulate(
			$s:Symptom( this memberOf $ss ),
            init(List<Symptom> list1=new ArrayList<Symptom>();),
            action(list1.add($s);),
            result(list1)
		)
	then
		modify($d) {setSpecificSymptomsMatchedNum((long) $resList.size())};
		modify($d) {setSpecificSymptomsMatched($resList)};
end

rule "Find matching non specific symptoms"
	lock-on-active true
	agenda-group "finding symptoms"
	salience 30
	when
		$d:Disease( $nss:nonSpecificSymptoms )
		$resList:List() from accumulate(
			$s:Symptom( this memberOf $nss ),
            init(List<Symptom> list1=new ArrayList<Symptom>();),
            action(list1.add($s);),
            result(list1)
		)
	then
		modify($d) {setNonSpecificSymptomsMatchedNum((long) $resList.size())};
		modify($d) {setNonSpecificSymptomsMatched($resList)};
end


rule "Only one disease survived"
	lock-on-active true
	agenda-group "diagnose"
	salience 20
	when
		$dio: Diagnose(disease == null)
		accumulate (
			$d: Disease(),
			$dNum: count($d)
		)
		$disease: Disease($ssm: specificSymptomsMatched, $ssmn: specificSymptomsMatchedNum,
		$nssm: nonSpecificSymptomsMatched, $nssmn: nonSpecificSymptomsMatchedNum, $dNum == 1)
	then
		modify($dio){setDisease($disease)}
		modify($dio){setSpecificSymptoms($ssm)}
		modify($dio){setSpecificSymptomsMatched($ssmn)}
		modify($dio){setNonSpecificSymptoms($nssm)}
		modify($dio){setNonSpecificSymptomsMatched($nssmn)}
end

rule "Disease with more specific symptoms matched survives"
	lock-on-active true
	agenda-group "diagnose"
	salience 10
	when
		$dio : Diagnose(disease == null)
		accumulate (
            Disease($ssmn: specificSymptomsMatchedNum),
            $most: max($ssmn)
        )
       	$d : Disease($s1: specificSymptomsMatchedNum, $s1 != $most)
	then
		delete($d)
end

rule "Disease with more non specific symptoms matched survives"
	lock-on-active true
	agenda-group "diagnose"
	salience 5
	when
		$dio : Diagnose(disease == null)
		accumulate (
            Disease($nssmn: nonSpecificSymptomsMatchedNum),
            $most: max($nssmn)
        )
       	$d : Disease($s1: nonSpecificSymptomsMatchedNum, $s1 != $most)
	then
		delete($d)
end


rule "Zero or more diseases"
	lock-on-active true
	agenda-group "diagnose failed"
	salience 5
	when
		accumulate (
            $d: Disease(),
            $dNum: count($d)
        )
        $dio: Diagnose(disease == null, $dNum != 1)
	then
		System.out.println("Dijagnoza nije uspjela. Pronadjeno je: " + $dNum + " bolesti.");
end
